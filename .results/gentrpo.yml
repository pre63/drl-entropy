Ant-v5:
  trial_number: 18
  value: 998.4417738
  params:
    n_steps: 1024
    gamma: 0.99
    learning_rate: 9.74947264009094e-05
    n_critic_updates: 20
    cg_max_steps: 10
    target_kl: 0.01
    gae_lambda: 0.99
    batch_size: 128
    net_arch: small
    activation_fn: tanh
    entropy_coeff: -0.27
    buffer_capacity: 2000
    epsilon: 0.25
    orthogonal_init: 1
    n_timesteps: 400000
    n_envs: 2
  comment: 'Best trial details: _number=18, state=1, _values=[998.4417738], _datetime_start=2025-02-05
    10:06:08.460095, datetime_complete=2025-02-05 10:18:20.980165, _params={''n_steps'':
    1024, ''gamma'': 0.99, ''learning_rate'': 9.74947264009094e-05, ''n_critic_updates'':
    20, ''cg_max_steps'': 10, ''target_kl'': 0.01, ''gae_lambda'': 0.99, ''batch_size'':
    128, ''net_arch'': ''small'', ''activation_fn'': ''tanh'', ''entropy_coeff'':
    -0.27, ''buffer_capacity'': 2000, ''epsilon'': 0.25, ''orthogonal_init'': True,
    ''n_timesteps'': 400000, ''n_envs'': 2}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    996.8103152}, intermediate_values={1: 996.8103152, 2: 998.4417738}, _distributions={''n_steps'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512, 1024, 2048)), ''gamma'':
    CategoricalDistribution(choices=(0.8, 0.85, 0.9, 0.95, 0.99)), ''learning_rate'':
    FloatDistribution(high=1.0, log=True, low=1e-05, step=None), ''n_critic_updates'':
    CategoricalDistribution(choices=(5, 10, 20, 25, 30)), ''cg_max_steps'': CategoricalDistribution(choices=(5,
    10, 20, 25, 30)), ''target_kl'': CategoricalDistribution(choices=(0.1, 0.05, 0.03,
    0.02, 0.01, 0.005, 0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8,
    0.9, 0.92, 0.95, 0.98, 0.99, 1.0)), ''batch_size'': CategoricalDistribution(choices=(8,
    16, 32, 64, 128, 256, 512, 1024)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')),
    ''entropy_coeff'': FloatDistribution(high=1.0, log=False, low=-1.0, step=0.01),
    ''buffer_capacity'': IntDistribution(high=100000, log=False, low=1000, step=1000),
    ''epsilon'': FloatDistribution(high=0.9, log=False, low=0.1, step=0.05), ''orthogonal_init'':
    CategoricalDistribution(choices=(True, False)), ''n_timesteps'': IntDistribution(high=1000000,
    log=False, low=100000, step=100000), ''n_envs'': CategoricalDistribution(choices=(2,
    4, 6, 8, 10))}, _trial_id=18'

Humanoid-v5:
  trial_number: 110
  value: 253.0646324
  params:
    n_steps: 512
    gamma: 0.8
    learning_rate: 1.339329039213928e-05
    n_critic_updates: 30
    cg_max_steps: 30
    target_kl: 0.05
    gae_lambda: 0.9
    batch_size: 256
    net_arch: small
    activation_fn: relu
    entropy_coeff: -0.48
    buffer_capacity: 1000
    epsilon: 0.35
    orthogonal_init: 1
    n_timesteps: 800000
    n_envs: 10
  comment: 'Best trial details: _number=110, state=1, _values=[253.0646324], _datetime_start=2025-02-06
    22:13:09.028228, datetime_complete=2025-02-07 00:06:03.307297, _params={''n_steps'':
    512, ''gamma'': 0.8, ''learning_rate'': 1.339329039213928e-05, ''n_critic_updates'':
    30, ''cg_max_steps'': 30, ''target_kl'': 0.05, ''gae_lambda'': 0.9, ''batch_size'':
    256, ''net_arch'': ''small'', ''activation_fn'': ''relu'', ''entropy_coeff'':
    -0.48, ''buffer_capacity'': 1000, ''epsilon'': 0.35, ''orthogonal_init'': True,
    ''n_timesteps'': 800000, ''n_envs'': 10}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    210.38387440000002}, intermediate_values={1: 210.38387440000002, 2: 253.0646324},
    _distributions={''n_steps'': CategoricalDistribution(choices=(8, 16, 32, 64, 128,
    256, 512, 1024, 2048)), ''gamma'': CategoricalDistribution(choices=(0.8, 0.85,
    0.9, 0.95, 0.99)), ''learning_rate'': FloatDistribution(high=1.0, log=True, low=1e-05,
    step=None), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10, 20,
    25, 30)), ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)),
    ''target_kl'': CategoricalDistribution(choices=(0.1, 0.05, 0.03, 0.02, 0.01, 0.005,
    0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8, 0.9, 0.92, 0.95,
    0.98, 0.99, 1.0)), ''batch_size'': CategoricalDistribution(choices=(8, 16, 32,
    64, 128, 256, 512, 1024)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')),
    ''entropy_coeff'': FloatDistribution(high=1.0, log=False, low=-1.0, step=0.01),
    ''buffer_capacity'': IntDistribution(high=100000, log=False, low=1000, step=1000),
    ''epsilon'': FloatDistribution(high=0.9, log=False, low=0.1, step=0.05), ''orthogonal_init'':
    CategoricalDistribution(choices=(True, False)), ''n_timesteps'': IntDistribution(high=1000000,
    log=False, low=100000, step=100000), ''n_envs'': CategoricalDistribution(choices=(2,
    4, 6, 8, 10))}, _trial_id=110'
