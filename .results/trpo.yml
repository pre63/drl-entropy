Ant-v5:
  trial_number: 25
  value: 2724.7973348
  params:
    batch_size: 512
    n_steps: 2048
    gamma: 0.99
    learning_rate: 0.0013931381527875178
    line_search_shrinking_factor: 0.9
    n_critic_updates: 20
    cg_max_steps: 30
    cg_damping: 0.01
    target_kl: 0.05
    gae_lambda: 0.8
    net_arch: medium
    log_std_init: -2.32457966159704
    sde_sample_freq: 256
    ortho_init: 1
    activation_fn: relu
    lr_schedule: linear
    n_timesteps: 600000
    n_envs: 6
  comment: 'Best trial details: _number=25, state=1, _values=[2724.7973348], _datetime_start=2025-01-30
    10:24:21.411666, datetime_complete=2025-01-30 11:39:19.115633, _params={''batch_size'':
    512, ''n_steps'': 2048, ''gamma'': 0.99, ''learning_rate'': 0.0013931381527875178,
    ''line_search_shrinking_factor'': 0.9, ''n_critic_updates'': 20, ''cg_max_steps'':
    30, ''cg_damping'': 0.01, ''target_kl'': 0.05, ''gae_lambda'': 0.8, ''net_arch'':
    ''medium'', ''log_std_init'': -2.32457966159704, ''sde_sample_freq'': 256, ''ortho_init'':
    True, ''activation_fn'': ''relu'', ''lr_schedule'': ''linear'', ''n_timesteps'':
    600000, ''n_envs'': 6}, _user_attrs={}, _system_attrs={''completed_rung_0'': 1883.0085261999998},
    intermediate_values={1: 1883.0085261999998, 2: 2724.7973348}, _distributions={''batch_size'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512)), ''n_steps'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512, 1024, 2048)), ''gamma'':
    CategoricalDistribution(choices=(0.9, 0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)),
    ''learning_rate'': FloatDistribution(high=1.0, log=True, low=1e-05, step=None),
    ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6, 0.7, 0.8,
    0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)),
    ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)), ''cg_damping'':
    CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)), ''target_kl'': CategoricalDistribution(choices=(0.1,
    0.05, 0.03, 0.02, 0.01, 0.005, 0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8,
    0.9, 0.92, 0.95, 0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0,
    step=None), ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32,
    64, 128, 256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)),
    ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'':
    CategoricalDistribution(choices=(''linear'', ''constant'')), ''n_timesteps'':
    IntDistribution(high=1000000, log=False, low=100000, step=100000), ''n_envs'':
    CategoricalDistribution(choices=(2, 4, 6, 8, 10))}, _trial_id=25'
