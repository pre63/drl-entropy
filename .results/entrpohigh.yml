Ant-v5:
  trial_number: 100
  value: 2560.8411022
  params:
    n_steps: 8
    gamma: 0.99
    learning_rate: 0.00017742414531568917
    n_critic_updates: 30
    cg_max_steps: 5
    target_kl: 0.001
    gae_lambda: 0.95
    batch_size: 32
    net_arch: small
    activation_fn: relu
    ent_coef: 0.0007
    buffer_capacity: 81000
    reward_threshold: 300
    replay_strategy_threshold: 6.741863699813342
    epsilon: 0.1
    use_per: 0
    orthogonal_init: 0
    n_timesteps: 700000
    n_envs: 4
  comment: 'Best trial details: _number=100, state=1, _values=[2560.8411022], _datetime_start=2025-01-28
    22:20:27.773972, datetime_complete=2025-01-29 02:36:44.931073, _params={''n_steps'':
    8, ''gamma'': 0.99, ''learning_rate'': 0.00017742414531568917, ''n_critic_updates'':
    30, ''cg_max_steps'': 5, ''target_kl'': 0.001, ''gae_lambda'': 0.95, ''batch_size'':
    32, ''net_arch'': ''small'', ''activation_fn'': ''relu'', ''ent_coef'': 0.0007,
    ''buffer_capacity'': 81000, ''reward_threshold'': 300.0, ''replay_strategy_threshold'':
    6.741863699813342, ''epsilon'': 0.1, ''use_per'': False, ''orthogonal_init'':
    False, ''n_timesteps'': 700000, ''n_envs'': 4}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    2051.0711757999998}, intermediate_values={1: 2051.0711757999998, 2: 2560.8411022},
    _distributions={''n_steps'': CategoricalDistribution(choices=(8, 16, 32, 64, 128,
    256, 512, 1024, 2048)), ''gamma'': CategoricalDistribution(choices=(0.8, 0.85,
    0.9, 0.95, 0.99)), ''learning_rate'': FloatDistribution(high=1.0, log=True, low=1e-05,
    step=None), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10, 20,
    25, 30)), ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)),
    ''target_kl'': CategoricalDistribution(choices=(0.1, 0.05, 0.03, 0.02, 0.01, 0.005,
    0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8, 0.9, 0.92, 0.95,
    0.98, 0.99, 1.0)), ''batch_size'': CategoricalDistribution(choices=(8, 16, 32,
    64, 128, 256, 512, 1024)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')),
    ''ent_coef'': FloatDistribution(high=0.001, log=False, low=0.0, step=0.0001),
    ''buffer_capacity'': IntDistribution(high=100000, log=False, low=1000, step=1000),
    ''reward_threshold'': FloatDistribution(high=500.0, log=False, low=200.0, step=50.0),
    ''replay_strategy_threshold'': FloatDistribution(high=10.0, log=False, low=-10.0,
    step=None), ''epsilon'': FloatDistribution(high=0.9, log=False, low=0.1, step=0.05),
    ''use_per'': CategoricalDistribution(choices=(True, False)), ''orthogonal_init'':
    CategoricalDistribution(choices=(True, False)), ''n_timesteps'': IntDistribution(high=1000000,
    log=False, low=100000, step=100000), ''n_envs'': CategoricalDistribution(choices=(2,
    4, 6, 8, 10))}, _trial_id=100'
